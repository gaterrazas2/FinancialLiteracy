{"ast":null,"code":"var _jsxFileName = \"/Users/Gaboon/Desktop/01-starting-setup/src/components/Chart/Chart.js\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart(props) {\n  // Turning the array of objects from ExpensesChart.js into an array of numbers for the max() method to use\n  // Array of 12 values, one for each month\n  const dataPointValues = props.dataPoint.map(dataPoint => dataPoint.value);\n\n  //Spread operator is used to take the array of numbers and turn it into a list of arguments for the max method\n  const totalMax = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoints => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoints.value,\n      maxValue: totalMax,\n      label: dataPoints.label\n    }, dataPoints.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["ChartBar","jsxDEV","_jsxDEV","Chart","props","dataPointValues","dataPoint","map","value","totalMax","Math","max","className","children","dataPoints","maxValue","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Gaboon/Desktop/01-starting-setup/src/components/Chart/Chart.js"],"sourcesContent":["import ChartBar from \"./ChartBar\"\nimport \"./Chart.css\"\n\nfunction Chart(props){\n\n    // Turning the array of objects from ExpensesChart.js into an array of numbers for the max() method to use\n    // Array of 12 values, one for each month\n    const dataPointValues = props.dataPoint.map(dataPoint => dataPoint.value)\n\n    //Spread operator is used to take the array of numbers and turn it into a list of arguments for the max method\n    const totalMax = Math.max(...dataPointValues)\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoints => \n                <ChartBar \n                    key={dataPoints.label} \n                    value={dataPoints.value} \n                    maxValue={totalMax} \n                    label={dataPoints.label}\n                />    \n            ))}\n        </div>\n    )\n}\n\nexport default Chart"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,KAAKA,CAACC,KAAK,EAAC;EAEjB;EACA;EACA,MAAMC,eAAe,GAAGD,KAAK,CAACE,SAAS,CAACC,GAAG,CAACD,SAAS,IAAIA,SAAS,CAACE,KAAK,CAAC;;EAEzE;EACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,eAAe,CAAC;EAC7C,oBACIH,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBT,KAAK,CAACU,UAAU,CAACP,GAAG,CAAEO,UAAU,iBAC7BZ,OAAA,CAACF,QAAQ;MAELQ,KAAK,EAAEM,UAAU,CAACN,KAAM;MACxBO,QAAQ,EAAEN,QAAS;MACnBO,KAAK,EAAEF,UAAU,CAACE;IAAM,GAHnBF,UAAU,CAACE,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIxB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GApBQlB,KAAK;AAsBd,eAAeA,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}