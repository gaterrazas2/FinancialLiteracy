{"ast":null,"code":"var _jsxFileName = \"/Users/Gaboon/Desktop/01-starting-setup/src/components/Expenses/ExpenseList.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport './ExpenseList.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseList = props => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('2020');\n  function filterData(yearIn) {\n    setSelectedYear(yearIn);\n  }\n  function filterDate(expense) {\n    return expense.date.getFullYear().toString() === selectedYear;\n  }\n\n  // Changes array to contain only expenses from the selected year\n  let filteredData = props.expenses.filter(filterDate);\n\n  // Default message if a selected year has no expenses\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 19\n  }, this);\n\n  // If the selected year does have expenses, map is used\n  if (filteredData.length > 0) {\n    content = filteredData.map(expense_data => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense_data.title,\n      amount: expense_data.amount,\n      date: expense_data.date\n    }, expense_data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this));\n  }\n\n  // Card is the styling\n  // Expenses filter is the dropdown menu that allows you to select a year\n  // Content is the array of expense items retrieved from the map function above\n  // it is all wrapped in a final div to be able to be returned properly  \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onFilter: filterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseList, \"CWmQLuh53oCRMxbrjkLPEk/FPJA=\");\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","React","useState","jsxDEV","_jsxDEV","ExpenseList","props","_s","selectedYear","setSelectedYear","filterData","yearIn","filterDate","expense","date","getFullYear","toString","filteredData","expenses","filter","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","expense_data","title","amount","id","className","selected","onFilter","_c","$RefreshReg$"],"sources":["/Users/Gaboon/Desktop/01-starting-setup/src/components/Expenses/ExpenseList.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport './ExpenseList.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, {useState} from 'react';\n\n\nconst ExpenseList = (props) => {\n\n    const [selectedYear, setSelectedYear] = useState('2020')\n\n    function filterData(yearIn) {\n        setSelectedYear(yearIn)\n    }\n\n    function filterDate(expense) {\n        return expense.date.getFullYear().toString() === selectedYear\n    }\n\n    // Changes array to contain only expenses from the selected year\n    let filteredData = props.expenses.filter(filterDate)\n\n    // Default message if a selected year has no expenses\n    let content = <p>No Expenses found</p>\n\n    // If the selected year does have expenses, map is used\n    if(filteredData.length > 0){\n        content = filteredData.map(expense_data => \n            <ExpenseItem\n                key={expense_data.id}\n                title={expense_data.title}\n                amount={expense_data.amount}\n                date={expense_data.date}\n            />\n        )\n    }\n\n    // Card is the styling\n    // Expenses filter is the dropdown menu that allows you to select a year\n    // Content is the array of expense items retrieved from the map function above\n    // it is all wrapped in a final div to be able to be returned properly  \n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter selected={selectedYear} onFilter={filterData}/>\n                {content}\n            </Card>\n        </div>\n      );\n}\n\nexport default ExpenseList"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAC1B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExD,SAASQ,UAAUA,CAACC,MAAM,EAAE;IACxBF,eAAe,CAACE,MAAM,CAAC;EAC3B;EAEA,SAASC,UAAUA,CAACC,OAAO,EAAE;IACzB,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKR,YAAY;EACjE;;EAEA;EACA,IAAIS,YAAY,GAAGX,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACP,UAAU,CAAC;;EAEpD;EACA,IAAIQ,OAAO,gBAAGhB,OAAA;IAAAiB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEtC;EACA,IAAGR,YAAY,CAACS,MAAM,GAAG,CAAC,EAAC;IACvBN,OAAO,GAAGH,YAAY,CAACU,GAAG,CAACC,YAAY,iBACnCxB,OAAA,CAACN,WAAW;MAER+B,KAAK,EAAED,YAAY,CAACC,KAAM;MAC1BC,MAAM,EAAEF,YAAY,CAACE,MAAO;MAC5BhB,IAAI,EAAEc,YAAY,CAACd;IAAK,GAHnBc,YAAY,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIvB,CACL,CAAC;EACL;;EAEA;EACA;EACA;EACA;EACA,oBACIrB,OAAA;IAAAiB,QAAA,eACIjB,OAAA,CAACL,IAAI;MAACiC,SAAS,EAAC,UAAU;MAAAX,QAAA,gBACtBjB,OAAA,CAACJ,cAAc;QAACiC,QAAQ,EAAEzB,YAAa;QAAC0B,QAAQ,EAAExB;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC9DL,OAAO;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA1CKF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA4CjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}