{"ast":null,"code":"var _jsxFileName = \"/Users/Gaboon/Desktop/ExpenseTracker/src/components/Expenses/ExpenseList.js\",\n  _s = $RefreshSig$();\nimport ExpensesContent from \"./ExpensesContent\";\nimport Card from '../UI/Card';\nimport './ExpenseList.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from 'react';\nimport ExpensesChart from \"./ExpensesChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseList = props => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('2020');\n  function filterData(yearIn) {\n    setSelectedYear(yearIn);\n  }\n  function filterDate(expense) {\n    return expense.date.getFullYear().toString() === selectedYear;\n  }\n\n  // Changes array to contain only expenses from the selected year\n  let filteredData = props.expenses.filter(filterDate);\n\n  // Card is the styling\n  // Expenses filter is the dropdown menu that allows you to select a year\n  // Content is the array of expense items retrieved from the map function above\n  // it is all wrapped in a final div to be able to be returned properly  \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onFilter: filterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesContent, {\n        items: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseList, \"CWmQLuh53oCRMxbrjkLPEk/FPJA=\");\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["ExpensesContent","Card","ExpensesFilter","React","useState","ExpensesChart","jsxDEV","_jsxDEV","ExpenseList","props","_s","selectedYear","setSelectedYear","filterData","yearIn","filterDate","expense","date","getFullYear","toString","filteredData","expenses","filter","children","className","selected","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","items","_c","$RefreshReg$"],"sources":["/Users/Gaboon/Desktop/ExpenseTracker/src/components/Expenses/ExpenseList.js"],"sourcesContent":["import ExpensesContent from \"./ExpensesContent\";\nimport Card from '../UI/Card';\nimport './ExpenseList.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, {useState} from 'react';\nimport ExpensesChart from \"./ExpensesChart\";\n\n\nconst ExpenseList = (props) => {\n\n    const [selectedYear, setSelectedYear] = useState('2020')\n\n    function filterData(yearIn) {\n        setSelectedYear(yearIn)\n    }\n\n    function filterDate(expense) {\n        return expense.date.getFullYear().toString() === selectedYear\n    }\n\n    // Changes array to contain only expenses from the selected year\n    let filteredData = props.expenses.filter(filterDate)\n\n    // Card is the styling\n    // Expenses filter is the dropdown menu that allows you to select a year\n    // Content is the array of expense items retrieved from the map function above\n    // it is all wrapped in a final div to be able to be returned properly  \n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter selected={selectedYear} onFilter={filterData}/>\n                <ExpensesChart expenses={filteredData}/>\n                <ExpensesContent items={filteredData}/>\n            </Card>\n        </div>\n      );\n}\n\nexport default ExpenseList"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAC1B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAExD,SAASS,UAAUA,CAACC,MAAM,EAAE;IACxBF,eAAe,CAACE,MAAM,CAAC;EAC3B;EAEA,SAASC,UAAUA,CAACC,OAAO,EAAE;IACzB,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKR,YAAY;EACjE;;EAEA;EACA,IAAIS,YAAY,GAAGX,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACP,UAAU,CAAC;;EAEpD;EACA;EACA;EACA;EACA,oBACIR,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACN,IAAI;MAACuB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBhB,OAAA,CAACL,cAAc;QAACuB,QAAQ,EAAEd,YAAa;QAACe,QAAQ,EAAEb;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/DvB,OAAA,CAACF,aAAa;QAACgB,QAAQ,EAAED;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxCvB,OAAA,CAACP,eAAe;QAAC+B,KAAK,EAAEX;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAApB,EAAA,CA5BKF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA8BjB,eAAeA,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}